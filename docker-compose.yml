name: dima

services:
  webapp:
    image: ${DOCKER_REGISTRY-}dimawebapp
    build:
      context: .
      dockerfile: src/Dima.WebApp/Dockerfile
    networks:
      - frontend
    depends_on:
      - api

  api:
    image: ${DOCKER_REGISTRY-}dimaapi
    build:
      context: .
      dockerfile: src/Dima.Api/Dockerfile
    networks:
      - backend
      - frontend
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=dima
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  pgdata:

networks:
  backend:
  frontend:
